---
name: main
# Automatically cancel a previous run.
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
jobs:
  run-tests:
    name: Run tests for ${{ matrix.os }} on ${{ matrix.environment }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        environment:
          - py311
          - py312
          - py313
          - py313-jax
        exclude:
          - os: macos-latest
            environment: py311
          - os: macos-latest
            environment: py312
          - os: windows-latest
            environment: py311
          - os: windows-latest
            environment: py312
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.13
        with:
          pixi-version: v0.49.0
          cache: true
          cache-write: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
          frozen: true
          environments: ${{ matrix.environment }}
      - name: Configure dot on macOS
        if: runner.os == 'macOS'
        run: pixi run -e ${{ matrix.environment }} dot -c
      - name: Run tests on Linux (with NumPy backend and without coverage)
        if: matrix.environment == 'py311' || matrix.environment == 'py312'
        run: pixi run -e ${{ matrix.environment }} tests
        shell: bash -el {0}
      - name: Run tests on Linux (with NumPy backend and coverage)
        if: runner.os == 'Linux' && matrix.environment == 'py313'
        run: pixi run -e ${{ matrix.environment }} tests --cov=./ --cov-report=xml
        shell: bash -el {0}
      - name: Run tests on MacOS / Windows (with NumPy backend and without coverage)
        if: runner.os != 'Linux'
        run: pixi run -e ${{ matrix.environment }} tests
        shell: bash -el {0}
      - name: Run tests with JAX backend
        if: matrix.environment == 'py313-jax'
        run: pixi run -e ${{ matrix.environment }} tests-jax
        shell: bash -el {0}
      - name: Upload coverage reports
        if: runner.os == 'Linux' && matrix.environment == 'py313'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
